# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven # --> Name of the workflow

on: # --> Events that will trigger the gitHub actions
  workflow_dispatch: # --> Creates a button to run actions on demand
  push: # --> Event 1
    branches: [ "master" ]
  pull_request: # --> Event 2
    branches: [ "master" ]

env:
  build-number: ${GITHUB_RUN_NUMBER}

jobs: # --> Workflow that will be executed whenever the events are triggered

  build: # --> name of the first job
    runs-on: ubuntu-latest # --> The type of runner that the job will run on

    steps: # --> Represents a sequence of tasks that will be executed as part of the job
    - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

    - uses: actions/checkout@v4 # --> Action = Download the content of your repo to the current workspace

    - name: Set up JDK 21 # Name given to the action
      uses: actions/setup-java@v4 # --> Action
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven # --> Name given to the
      run: mvn compile --file pom.xml # --> Command to be run



  test: # --> name of the second job
    runs-on: ubuntu-latest
    needs: [build] # --means that this job -test- will run only after the -build- job finished execution

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests with Maven
        run: mvn -B test --file pom.xml


  create-jar: # --> name of the third job
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Create JAR
        run: | 
         mvn clean package -DskipTests
         mkdir staging && mv target/auto-group-app.jar target/auto-group-app-${{ env.build-number }}.jar && cp target/*.jar staging
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging
          retention-days: 1